The following is a conversation with Colvert, he is the president and CEO of KU's automation, leading an effort to solve one of the biggest robotics challenges of our time, vehicle automation. he is a co-founder of two successful companies, Twitch and crews that have sold for a billion dollars. And he is a great example of the innovative spirit that flourishes in Silicon Valley and now is facing an interesting and exciting challenge of matching that spirit with the mass production and the city centric culture of a major automaker like General Motors.
This conversation is part of the MIT Artificial General Intelligence Series and the Artificial Intelligence Podcast. If you enjoy it, please subscribe on YouTube, iTunes or simply connect with me on Twitter at Lex Friedman spelled F.R. I.D.. And now here is my conversation with Carl Vogt. You grew up in Kansas, right? Yeah, and I just saw that picture you had there, so I am a little bit a little bit worried about that. Yeah.
So in high school in Kansas City, you joined Shawnee Mission North High School robotics team.
Yeah. That was not your high school. that is right. That was that was the only high school in the area that had a like a teacher who was willing to sponsor a first robotics team.
I was going to tell you a little bit. Jog your memory a little bit.
Yeah, that kid was trying to look super cool and intense because, you know, this was Battleborn. This is serious business.
So we are standing there with a welded steel frame and looking tough to go back there.
What is it that drew you to robotics? Well, I think I have been trying to figure this out for a while, but I have always liked building things with Legos. And when I was really, really young, I wanted the Legos. I had motors and other things. And then, you know, Lego Mindstorms came out and for the first time you could program Lego contraptions. And I think things just sort of snowballed from that.
But I remember seeing, you know, the Battle Bots TV show on Comedy Central and thinking that is the coolest thing in the world. I want to be a part of that and not knowing a whole lot about how to build these 200 pound fighting robots. So I sort of obsessively poured over the Internet forums where all the creators for about robots would sort of hang out and talk about, you know, document their build progress and everything. And I think I read I must have read, like, you know, tens of thousands of forum posts from from basically everything that was out there on what these people were doing and eventually, like, sort of triangulated how to how to put some of these things together and and, uh, ended up doing battle bots, which was, you know, I was like 13 or 14, which was pretty awesome.
I am not sure if the show's still running, but so Babatz is there is not an artificial intelligence component. it is remotely controlled. And it is almost like a mechanical engineering challenge of using things that can be broken.
they are radio controlled. So and I think that they allowed some limited form of autonomy. But, you know, in a two minute match, you are in the way these things and you are really doing yourself a disservice by trying to automate it versus just, you know, do the practical thing, which is drive it yourself.
And there is an entertainment aspect just just going on YouTube. there is like and some of them wield an ax. Some of them I mean, there is that fun.
So what drew you to that aspect? Was it the mechanical engineering or was it the dream to create like Frankenstein and sentient being, or was it just like the Lego? You like tinkering with stuff?
I mean, that was just building something. I think the idea of, you know, this this radio-controlled machine that that can do various things if it has like a weapon or something was pretty interesting. I agree it does not have the same appeal as, you know, autonomous robots, which I which I, you know, sort of gravitated towards later on. But it was definitely an engineering challenge. Because everything you did in that competition was pushing components to their limits, so we would buy like these 40 dollar DC motors that came out of a winch, like on the front of a pickup truck or something, and we would power the car with those and we would run them at like double or triple their rated voltage.
So they immediately start overheating. But for that two minute match, you can get, you know, a significant increase in the power output of those motors before they burn out. And so you are doing the same thing for your battery packs, all the materials in the system. And I think there is something, something intrinsically interesting about just seeing like where things break and did you offline see where they break?
Did you take it to the testing point? How do you know, two minutes or was there a reckless let us just go with it and see.
We were not very good at Battletoads. We lost all of our matches the very first round, like the one I built for both of them were these wedge shaped robots because of Wedge, even though it is sort of boring to look at as extremely effective. You drive towards another robot and the front edge of it gets under them and then they sort of flip over, kind of like a doorstopper. And the first one had a pneumatic, polished stainless steel spike on the front that would shoot at about eight inches.
The purpose of which is what? Pretty pretty ineffective, actually, but it looks cool. And was it helped with the lift? No, it was it was just to try to poke holes in the other robot. And then the second time I did it, which is the following, I think maybe eight months later we had a well, a titanium axe with a with a hardened steel tip on it that was powered by a hydraulic cylinder, which we were activating with liquid CO2, which was had its own set of problems.
So great. So that is kind of on the hardware side. I mean, at a certain point, there must have been born a fascination on the software side.
So what was the first piece of code you have written? You go back there, see what language was it?
What what was that? Was Emax IMAX? When was it a more respectable modern idea? Do you remember any of this?
Yeah, well, I remember I think maybe when I was in third or fourth grade school, I was at elementary school, had a bunch of Apple two computers, and we would play games on those. And I remember every once in a while something would would would crash. It would not start up correctly and it would dump you out to what I later learned was like sort of a command prompt. And my teacher would come over and I actually remember this to this day for some reason, like power number six or eight pound six, which is six, which is the distri, which is fire up the disk and load the program.
And I just remember thinking, wow, she is like a hacker, like teach me to use these codes error codes is what I call him at the time, but she had no interest in that. So it was not until I think about fifth grade that I had a school where you could actually go on these apple twos and learn to program and so on. Basic, you know, where every line, you know, the line numbers are all are the every line is numbered and you have to like leave enough space between the numbers that if you want to tweak your code, you go back in.
The first line was ten. In the second line is twenty nine. If you go back and insert fifteen and if you need to add code in front of that, you know, eleven or twelve and you hope you do not run out line numbers and have to redo the whole thing then go to statements.
Yeah.
Go to and is very basic maybe hence the name but a lot of fun. And that was like, that was you know that is that is when you know, when you first program you see the magic of it. it is like it just just like this world opens up with, you know, endless possibilities for the things you could build or or accomplish with that computer.
So you got the bug then. So even started with Basic and then what? C++ throughout. What did you. It was a computer program and computer science classes in high school.
Not not where I went. So I was self-taught, but I did a lot of programming. The thing that. You know, sort of push me in the path of eventually working on self-driving cars is actually one of these really long trips driving from my house in Kansas to, I think, Las Vegas, where we did the Battle Bots competition.
And I had just gotten my I think my learner's permit or early driver's permit. And so I was driving this, you know, 10 hour stretch across western Kansas where it is just you are going straight on a highway and it is mind numbingly boring. And I remember thinking even then with my sort of mediocre programming background, that this is something that a computer can do it right. let us take a picture of the road and let us find the yellow lane markers and, you know, steer the wheel.
And, you know, later I would come to realize this had been done, you know, since since the 80s or the 70s or even earlier. But I still wanted to do it. And sort of immediately after that trip switched from sort of paddleboards, which is more radio-controlled machines to thinking about building, you know, autonomous vehicles of some scale. Start off with really small electric ones and then. You know, progressed to what we are doing now. So what was your view of artificial intelligence at that point?
What did you think? So this is before there is been ways in artificial intelligence, right?
The current way with deep learning makes people believe they can solve in a really rich, deep way the computer vision perception problem.
But like in before the deep learning craze, you know, how do you think about how would you even go about building a thing that perceives itself in the world, localize itself in the world, moves around the world, like when you were younger? I mean, what was your thinking about it?
Well, prior to deep narrow networks or convolutional neural nets, these modern techniques we have or at least ones that are in use today, it was all a heuristic space. And so like old school image processing and I think extracting, you know, yellow line markers out of an image of a road is one of the problems that lends itself reasonably well to those heuristic based methods. You know, like just do a threshold on the color yellow and then try to fit some lines to that using a half transform or something, and then go from there traffic light detection and stop signs detection, red, yellow, green.
And I think you can you could I mean, if you wanted to do a full I was just trying to make something that would stay in between the lanes on a highway. But if you wanted to do the full. The full, you know, set of capabilities needed for a driverless car. I think you could and we would done this at Cruise, you know, in the very first days. You can start off with a really simple, you know, human written heuristic just to get the scaffolding in place for your system.
Traffic light detection, probably a really simple, you know, color thresholding on day one just to get the system up and running before you migrate to, you know, a deep learning based technique or something else. And, you know, back in when I was doing this, my first one, I was on Opinium two hundred and thirty two hundred and thirty three megahertz computer in it. And I think I wrote the first version in Basic, which is like an interpreted language.
it is extremely slow because that is the thing I knew at the time. And so there was no no chance at all of using. there is no computational power to do any sort of reasonable. Deep nets like you have today, so I do not know what kids these days are doing our kids these days, you know, at age 13 using neural networks in their garage.
I mean, I also I get emails all the time from, you know, like 11, 12 year olds saying I am having, you know, I am trying to follow this four tutorial and I am having this problem and their general approach and the deep learning community is of extreme optimism of as opposed to you mentioned like heuristics. You can you can you can separate the autonomous driving problem into modules and try to solve it sort of rigorously. Or you can just do it and to end.
And most people just kind of love the idea that, you know, all humans do it and then we just perceive and act. We should be able to do the same kind of thing when you are on that. And that that kind of thinking, you do not want to criticize that kind of thinking because eventually there will be, right?
Yeah.
And so it is exciting and especially when they are younger to explore that as a really exciting approach. But, yeah, it is it is changed the the language, the kind of stuff you are tinkering with. it is kind of exciting to see when these teenagers grow up. Yeah.
I can only imagine if you if you are starting point is, you know, python intenser flow at age 13 where you end up, you know, after 10 or 15 years of that.
that is that is pretty cool because it github because the stair tools for solving most of the major problems in artificial intelligence are within a few lines of code for most kids. And that is incredible to think about also on the entrepreneurial side. And on that point, was there any thought about entrepreneurship before you came to college? Is sort of doing years of building this into a thing that impacts the world on the large scale?
Yeah, I have always wanted to start a company. I think that is, you know, just a cool concept of creating something and exchanging it for value or creating value, I guess. So in high school, I was I was trying to build, like, you know, a servo, motor drivers, little circuit boards and sell them online or other things like that. And certainly knew at some point I wanted to do a startup, but it was not really, I would say until college, until I felt like I had the.
it is the right combination of the environment, the smart people around you, and some free time and a lot of free time at MIT.
So you came to MIT as an undergrad 2004? that is right. And that is when the first dorper grand challenge was happening. Yeah, the timing of that is beautifully poetic. So how do you get yourself involved in that one?
Originally, there was not a facial injury. Yeah. Faculty sponsored thing. And so a bunch of undergrads, myself included, started meeting and got together and tried to to haggle together some sponsorships. We got a vehicle, donated a bunch of sensors and tried to put something together. And so we had our team was probably mostly freshmen and sophomores, you know, which which was not really a fair, fair fight against maybe the. You know, postdoc and faculty led teams from other schools, but we we got something up and running, we had our vehicle drive by wire and, you know, very, very basic control and things, but.
On the day of the qualifying. Sort of pre qualifying round, the one and only steering motor that we had purchased, the thing that we had, you know, retrofitted to turn the steering wheel on the truck. Died and so our vehicle was just dead in the water, could not steer. So we did not make it very far on the hardware side. So was there a software component? Was there like how did you view autonomous vehicles in terms of artificial intelligence?
Evolve in this moment, I mean, you know, like you said from the 80s has been autonomous vehicles, but really that was the birth of the modern wave there, the thing that captivated everyone's imagination that we can actually do this.
So how were you captivated in that way or so? How did your view of autonomous vehicles change at that point?
I would say at that point in time, it was it was a. The curiosity as in like, is this really possible? And I think that was generally the spirit and the the purpose of that original TARP program challenge, which was to just get a whole bunch of really brilliant people exploring the space and pushing the limits. And I think like to this day, that DARPA challenge with its million dollar prize pool was probably one of the most effective, you know, uses of taxpayer money, dollar for dollar that I have seen.
You know, because that that small sort of initiative that DARPA put put out sort of, in my view, was the catalyst or the tipping point for this this whole next wave of autonomous vehicle development. So that was pretty cool.
So let me jump around a little bit on that point, as they also did the urban challenge, where it was in the city, but it was very artificial. And there is no pedestrians and there is very little human involvement except a few professional drivers. Yeah.
Do you think there is room? And then there was the robotics challenge with humanoid robots right in your now role is looking at this.
you are trying to solve one of the, you know, autonomous driving, one of the harder, more difficult place in San Francisco. Is there a role for DARPA to step in to also kind of help out that challenge with new ideas? Specifically, pedestrians and so on, all these kinds of interesting things. I have not even thought about it from that perspective. Is there anything Dapo could do today to further accelerate things? And I would say. My instinct is that that is maybe not the highest and best use of their resources in time because like kickstarting and speeding up the flywheel is, I think, what what they did in this case for very, very little money.
But today, this has become. This has become like commercially interesting to very large companies and the amount of money going into it and the amount of people like going through your class and learning about these things and developing skills is just, you know, orders of magnitude more than it was back then. And so there is enough momentum and inertia in energy and investment dollars into this space right now that I do not I do not I think they are I think they can just say mission accomplished and move on to the next area of technology that that needs help.
So then stepping back to Might, you left the mighty junior junior year. What was that decision like?
As I said, I always wanted to do a company in or start a company. And this opportunity landed in my lap, which was a couple of guys from Yale were starting a new company. And I Googled them and found that they had started a company previously and sold it actually on eBay for about a quarter million bucks, which was a pretty interesting story. But so I thought to myself, these guys are, you know, rock star entrepreneurs. they have done this before.
They must be driving around and Ferraris because they sold their company. And, you know, I thought I could learn a lot from them, so I teamed up with those guys and, you know, went out during. Went out to California during IAP, which is Mitty's month off on a one way ticket and basically never went back. We were having so much fun, we felt like we were building something and creating something. And it was going to be interesting that, you know, I was just all in and got completely hooked and that that business was just in TV, which is originally a reality show about a guy named Justin.
Which morphed into a live video streaming platform, which then morphed into what is Twitch today, so that was that was quite an unexpected journey.
So no regrets? No looking back, it was just an obvious I mean, one way ticket. I mean, if we just pause in the first second, there was no. How did you know these were the right guys, this is the right decision? You did not think it was just follow the heart kind of thing?
Well, I did not know. But, you know, just trying something for a month during IAP seems pretty low risk. Right. And then, you know, well, maybe I will take a semester off. MIT is pretty flexible about that. You can always go back. Right. And then after two or three cycles of that, I eventually threw in the towel. But, you know, I think it is. I guess in that case, I felt like I could always hit the undo button if I had to.
Right. But nevertheless, from when you look in retrospect, I mean, it seems like a brave decision. And, you know, it would be difficult for a lot of people to make. It was not as popular.
I would say that the general, you know, flux of people out of MIT at the time was mostly into, you know, finance or consulting jobs in Boston or New York. And very few people were going to California to start companies. But today, I would say that is it is probably inverted. Which is just a sign of a sign of the times, I guess. Yeah, so there is a story about midnight of March 18, 2007, where we are at TechCrunch, I guess, announced just in TV earlier than it was supposed to a few hours.
The site did not work. I do not know if any of this is true, you can tell me and you and one of the folks adjusted to sheer code it through the night. Can you take me through that experience? So let me let me say a few nice things that the article I read quoted. Justin Carnes said that you were known for bureau coding through problems and being a creative, quote, creative genius.
So on that night. What what was going through your head or maybe put another way, how do you solve these problems? what is your approach to solving these kinds of problems with the line between success and failure seems to be pretty thin. that is a good question.
Well, first of all, that is that is nice of Justin to say that. I think, you know, I would have been maybe 21 years old then and not very experienced at programming. But as with with everything in a start up, you are sort of racing against the clock. And so our plan was the second we had this live streaming camera backpack up and running where Justin could wear it. And no matter where he went in the city, it would be streaming live video.
And this is even before the iPhone. This is like hard to do back then. We would launch and so we thought we were there and the backpack was working, and then we sent out all the emails to launch the launch the company and do the press thing. And then, you know, we were not quite actually there. And then we thought, oh, well, you know, they are not going to announce it until. Maybe 10 a.m. the next morning, and it is I do not know, it is five pm now, so how many hours do we have left?
What is that like, you know, 17 hours to go.
And and that was that was going to be fine.
Was the problem obvious? Did you understand what could possibly like how complicated was the system at that point? It was it was pretty messy, so to get a live video feed that looked decent working from anywhere in San Francisco, I put together this system where we had like three or four cell phone data modems. And they were like, we take the video stream and, you know, sort of spread across these three or four modems and then try to catch all the packets on the other side with unreliable cell phone networks.
Pretty low level networking. Yeah. And putting this like, you know, sort of protocols on top of all that to to reassemble and reorder the packets and have time buffers and error correction and all that kind of stuff. And the night before it was just staticky. Every once in a while the image would go staticky and there would be this horrible, like screeching audio noise because the audio was also corrupted. And this would happen like every five to 10 minutes or so.
And it was a really, you know, off-putting to the viewers. Yeah.
How do you tackle that problem? What was the you just freaking out behind a computer? there is the word. Are there other other folks working on this problem like we behind a whiteboard were you doing? Yes.
there is a little hair coding. He has a little lonely because there is four of us working on the company and only two people really wrote code. And Emmett wrote the website in the chat system. And I wrote the software for this video streaming device and video server. And so, you know, was my sole responsibility to figure that out, and I think I think it is those, you know, setting setting deadlines, trying to move quickly and everything where you are in that moment of intense pressure, that sometimes people do their best and most interesting work.
And so even though that was a terrible moment, I look back on it fondly because that is like, you know, that is one of those character defining moments, I think.
So in 2013, October, you founded Cruise Automation. Yeah, so progressing forward, another exceptionally successful company was acquired by GM in 16 for one billion dollars. But in October 2013, what was on your mind?
What was the plan?
How does one seriously start to tackle one of the hardest robotics, most important impactful robotics problems of our age after going through Twitch, which was, was and is today pretty successful, but the the work was the result was entertainment. Mostly like the better the product was, the more we would entertain people and then, you know, make money on the ad revenues and other things. And that was that was a good thing. It felt felt good to entertain people.
But I figured, like, you know, what is really the point of becoming a really good engineer and developing new skills other than, you know, my own enjoyment. And I realized I wanted something that scratched more of an existential itch, like something that that truly matters. And so I basically made this list of. Requirements for a new if I was going to do another company and the one thing I knew in the back of my head, that Twitch took like eight years to become successful.
And so whatever I do, I better be willing to commit, you know, at least 10 years to something. And when you think about things from that perspective. You certainly, I think, raise the bar on what you choose to work on. So for me, the three things where it had to be something where the technology itself determines the success of the product, like hard, really juicy technology problems, because that is what motivates me. And then it had to have a direct and positive impact on society in some way.
So an example would be like, you know, health care, self-driving cars, because they save lives, other things where there is a clear connection to somehow improving other people's lives. And the last one is it had to be a big business because for the positive impact to matter, it is got to be a large scale scale. And I was thinking about that for a while. And I made like a tried writing a Gmail clone and looked at some other ideas.
And then it just sort of light bulb went off like self-driving cars. Like that was the most fun I had ever had in college working on that. And like, well, what is the state of the technology has been 10 years, maybe maybe times have changed and maybe now is the time to make this work. And I poked around and looked at the only other thing out there really at the time was the Google self-driving car project. And I thought, surely there is a way to.
You have an entrepreneur mindset and sort of solve the minimum viable product here. And so I just took the plunge right then and there and said this. This is something I know I can commit 10 years to. it is the probably the greatest applied A.I. problem of our generation. And if it works, it is going to be both a huge business and therefore, like probably the most positive impact I can possibly have on the world. So after that light bulb went off, I went all in on Cruise immediately and.
Got to work. Did you have an idea how to solve this problem, which aspects of the problem to solve? You know, like we just had Oliver for voyage here, Slow-Moving, Retirement Communities, Urban driving, highway driving. Did you have, like did your vision of the city of the future or, you know, the transportation is largely automated, that kind of thing, or was it sort of more fuzzy and gray area than that?
My analysis of the situation is that Google is putting a lot it had been putting a lot of money into that project, had a lot more resources. And so. And they still had not cracked the fully driverless car, you know, this is twenty, twenty thirteen, I guess. So I thought, what what can I do to sort of go from zero to, you know, significant scale so I can actually solve the real problem, which is the driverless cars?
And I thought here is the strategy will start by doing a really simple problem or solving a really simple problem that creates value for people. So eventually ended up deciding on automating highway driving, which is relatively more straightforward. As long as there is a backup driver there and, you know, the go to market will be able to retrofit people's cars and to sell these products directly. And the idea was we will take all the revenue and profits from that and use it to do the necessary to reinvest that in research for doing fully driverless cars.
And that was the plan. The only thing that really changed along the way between then and now is we never really launched the first product. We had enough interest from investors and enough of a signal that this was something that we should be working on, that after about a year of working on the highway autopilot, we had it working, you know, on a prototype stage. But we just completely abandoned that and said we are going to go all in on driverless cars.
Now is the time. I can not think of anything that is more exciting and if it works, more impactful. So we are just going to go for it.
The idea of retrofit is kind of interesting. Yeah. Of being able to it is how you achieve scale. it is a really interesting idea is it is something that is still in the in the back of your mind as a possibility.
Not at all. I have come full circle on that one. Ask. Trying to build a retrofit product and I will touch on some of the complexities of that and then also having been inside an OEM and seeing how things work and how a vehicle is developed and validated when it comes to something that has safety, critical implications like controlling the steering and other control inputs on your car. it is pretty hard to get there with with a retrofit or if you did, even if you did it, it creates a whole bunch of new complications around liability or how did you truly validate that?
Or, you know, something in the base vehicle fails and causes your system to fail. Whose fault is it? Or if the car's anti-lock brakes systems or other things kick in or the software has been, it is different in one version of the car you retrofit versus another and you do not know because the manufacturer has updated it behind the scenes, there is basically an infinite list of longtail issues that can get you. And if you are dealing with a safety critical product, that is not really acceptable.
that is a really convincing summary of why this really challenging.
But I think at the time, so we tried it anyway. But as a pitch also at the time, it is a really strong one. that is how you achieve scale and that is how you beat the current the leader at the time of Google or the only one in the market.
The other big problem we ran into, which is perhaps the biggest problem from a business model perspective, is we had kind of assumed that we started with an Audi as far as the vehicle we retrofitted with this highway driving capability. And we had kind of assumed that if we just knock out like three making models of vehicle that'll cover like 80 percent of the San Francisco market, does not everyone then drive, I do not know, a BMW or a Honda Civic or one of these three cars.
And then we surveyed our users and we found out that it is all over the place we would to get even a decent number of units sold. we would have to support like, you know, 20 or 50 different models. And each one is a little butterfly that takes time and effort to maintain that retrofit integration and custom hardware and all this. So is it is a tough business.
So GM manufactures and sells over nine million cars a year. And what you with crews are trying to do some of the most cutting edge innovation in terms of applying A.I. And so out of those, it is talked about a little bit before.
But it is also just fascinating to me. We work a lot of automakers. You know, the difference between the gap between Detroit and Silicon Valley, it is just to be sort of poetic about it, I guess. How do you close that gap?
How do you take GM into the future where a large part of the fleet would be autonomous?
Perhaps? I want to start by acknowledging that that GM is made up of, you know, tens of thousands of really brilliant, motivated people who want to be a part of the future. And so it is it is pretty fun to to work with them. The attitude inside a car company like that is, you know, embracing this this transformation and change rather than fearing it. And I think that is a testament to the leadership at GM and that is flowing all the way through to to everyone you talk to, even the people in the assembly plants working on these cars.
Right. So that is really great. So that starting from that position makes it a lot easier. So then when the people in San Francisco at Cruze interact with the people at GM, at least we have this common set of values, which is that we really want this stuff to work because we think it is important and we think it is the future. that is not to say, you know, those two cultures do not clash, they absolutely do. there is different different sort of value systems like in a car company.
The thing that gets you promoted in and sort of the reward system is following the processes, delivering the the program on time and on budget. So any sort of risk taking is discouraged in many ways because. If a program is late or if you shut down the plant for a day, it is you know, you can count the millions of dollars that that burn by pretty quickly. Whereas I think in a most Silicon Valley companies and and crews and the methodology we were employing, especially around the time of the acquisition, the reward structure is about.
Trying to solve these complex problems in any way, shape or form are coming up with crazy idea is that 90 percent of them will not work. And and so so meshing that culture of sort of continuous improvement and experimentation with one where everything needs to be rigorously defined up front so that you never slip a deadline or miss a budget was a pretty big challenge and that we are over three years in now after the acquisition. And I would say like, you know, the investment we made in figuring out how to work together successfully and who should do what and how we bridge the gaps between these very different systems and way of doing engineering work is now one of our greatest assets because I think we have this really powerful thing.
But for a while it was. Both bogyman careers were very steep on the learning curve. Yes, I am sure it was very stressful. it is really important work because that is that is how to revolutionize the transportation, really to revolutionize any system.
You know, you look at the health care system or you look at the legal system of people like lawyers come up to me all the time, like everything they are working on can easily be automated. But then that is not a good feeling, that it is not a good feeling.
But also there is no way to automate because the entire infrastructure is really, you know, based is older and it moves very slowly.
And so how do you close the gap between.
I have not how can I replace, of course, lawyers that will not be replaced with an app, but you could replace a lot of aspects when most of the data is still on paper. And so the same thing was with automotive. I mean, it is fundamentally software.
So it is basically hiring software engineers, just thinking a software world. I mean, I am pretty sure nobody in Silicon Valley has ever hit a deadline and then it is probably true.
Yeah, and GSI is probably the opposite. Yeah. So that is that culture gap is really fascinating. So you are optimistic about the future of that?
Yeah. I mean, from what I have seen, it is impressive. And I think like especially in Silicon Valley, it is easy to write off building cars because, you know, people have been doing that for over 100 years now in this country. And so it seems like that is a solved problem. But that does not mean it is an easy problem. And I think it would be easy to sort of overlook that and think that, you know, we are Silicon Valley engineers.
We can solve any problem, you know, building a car. it is been done. Therefore, it is you know, it is it is it is not a it is not a real engineering challenge. But after having seen just the sheer scale and magnitude and industrialization. That occurs inside of an automotive assembly plant that is a lot of work that I am very glad that we do not have to reinvent to make self-driving cars work. And so to have, you know, partners who have done that for a hundred years now, these great processes and this huge infrastructure and supply base that we can tap into.
Is just remarkable because the scope. And surface area of of the problem of deploying fleets of self-driving cars is so large that we are constantly looking for ways to do less so we can focus on the things that really matter more. And if we had to figure out how to build and assemble and. You know, to build the cars themselves. I mean, we worked closely with GM on that, but if we had to develop all that capability in-house as well.
You know, that would just. Make make the problem really intractable, I think. So, yeah, just like your first. Entry that might drop a challenge when there was what, the motor that failed. Somebody that knows what they are doing with the motor did it.
I would have been nice if we could focus on the software, not the hardware platform. Yeah, right.
So, uh, from your perspective now, you know, there are so many ways that autonomous vehicles can impact society in the next year, five years, ten years.
What do you think is the biggest opportunity to make money in autonomous driving, sort of make it a financially viable thing in the near term. What do you think would be the biggest impact there?
Well, the things that that drive the economics for fleets of self-driving cars are there is sort of a handful of variables.
One is. You know, the cost to build the vehicle itself, so the material cost, how many, you know, what is the cost of all your sensors plus the cost of the vehicle and all the other components on it? Another one is the lifetime of the vehicle. it is very different if your vehicle drives 100000 miles and then it falls apart versus, you know, two million. And then, you know, if you have a fleet, it is kind of like an airplane where or a airline where once you produce the vehicle, you want it to be in operation as many hours a day as possible, producing revenue.
And then, you know, the other piece of that is. How are you generating revenue? I think that is what you are asking, and I think the obvious things today are, you know, the ride sharing business, because that is pretty clear that there is demand for that. there is existing markets you can tap into and large urban areas, that kind of thing. Yeah, yeah. And I think that there are some real benefits to having. Cars without drivers compared to sort of the status quo for people who use ride share services today, you know, you get privacy, consistency, hopefully significantly poorer safety, all these benefits versus the current product.
But it is a it is a crowded market and then other opportunities, which you have seen a lot of activity in the last really the last six or 12 months is, you know, delivery, whether that is parcels and packages, food or groceries. Those are all sort of, I think, opportunities that are that are pretty ripe. For these, once you have this core technology, which is the fleet of autonomous vehicles, there is all sorts of different business opportunities you can build on top of that.
But I think the important thing, of course, is that there is zero monetization opportunity until you actually have that fleet of very capable driverless cars that are that are as good or better than humans. And that is. Sort of where the entire industry is sort of in this holding pattern right now. Yeah, they are trying to do their baseline. So but you said sort of reliable, not reliability, consistency. it is kind of interesting. I think I heard you say somewhere.
Not sure if that is what you meant. But, you know, I can imagine a situation where you would get an autonomous vehicle. And, you know, when you get into an Uber Lyft, you do not get to choose the driver in a sense that you do not get to choose the personality of the driving.
Do you think there is a there is room to define the personality of the car, the way it drives you in terms of aggressiveness, for example, in terms of sort of pushing the bar? The one of the biggest challenges in times driving is the is the tradeoff between sort of safety and assertiveness.
And do you think there is any room for the human to take? A role in that decision to accept the liability, I guess I would not know, I would say within reasonable bounds, as in we are not going to. I think it would be highly unlikely we would expose any knob that would let you, you know, significantly increase safety risk. I think that is that is just not something we would be willing to do. But I think driving style or like, you know, are you going to relax the comfort constraints slightly or things like that?
All of those things make sense and are plausible. I see all those as nice optimizations. Once again, we get the core problem solved and these fleets out there. But the other thing we have sort of observed is that you have this intuition that if you sort of slam your foot on the gas right after the light turns green and aggressively accelerate, you are going to get there faster. But the actual impact of doing that is pretty small. You feel like you are getting there faster.
But so the same would be true for Ave's, even if they do not slam their, you know, the pedal to the floor, when the light turns green, they are going to get you there within, you know, if it is a 15 minute trip within 30 seconds of what you would have done otherwise, if you going really aggressively. So I think there is this sort of self-deception that that my aggressive driving style is getting me there faster.
Well, so that is, you know, some of the things that I study, some of the things I am fascinated by, the psychology of that. I do not think it matters. That does not get you there faster. it is it is the emotional release. Driving is is a place being, etc. car. Somebody said it is like the real world version of being a troll. So you have this protection, this little protection. you are able to sort of yell at the world to release your anger or whatever.
So there is an element of that that I think autonomous vehicles that also have to, you know, giving an outlet to people, but it does not have to be thought through through driving or honking or so there might be other outlets. But I think just sort of even just put that aside.
The baseline is really, you know, that is the focus. that is the thing you need to solve. And then the fun human things can be solved after. But so from the baseline of just solving autonomous driving, you are working in San Francisco, one of the more difficult cities to operate in.
What is what is the in your view, currently the hardest aspect of autonomous driving in negotiating with pedestrians is that the edge cases of perception is that planning is a mechanical engineering, a data fleeted stuff. What are your thoughts on the challenge, the more challenging aspects there?
that is a that is a good question. I think before before we go to that, though, I just want to I like what you said about the psychology aspect of this, because I think one observation I made is I think I read somewhere that I think it is maybe Americans on average spend, you know, over an hour a day on social media, like staring at Facebook. And so that is just, you know, 60 minutes of your life.
you are not getting back. it is probably not super productive. And so that is three thousand six hundred seconds. Right. And. that is that is tiny. it is a lot of time you are giving up, and if you compare that to people being on the road, if another vehicle, whether it is a human driver or autonomous vehicle, delays them by even three seconds, they are laying it on the horn. You know, even though that is that is, you know, one one thousandth of the time, they waste looking at Facebook every day.
So there is there is definitely some, you know, psychology aspects of this I think that are pretty interesting road rage in general. And then the question, of course, is if everyone is in self-driving cars, do they even notice these three second delays anymore because they are doing other things or reading or working or just talking to each other? So it will be interesting to see where that goes.
In a certain aspect, people people need to be distracted by something entertaining, something useful inside the car so they do not pay attention to the external world. And then and then they can take whatever psychology and bring it back to Twitter and then focus on that as opposed to sort of interacting, sort of putting the emotion out there into the world. So it is it is an interesting problem. But baseline autonomy, I guess you could say.
Self-driving cars, you know, at scale will lower the collective blood pressure of society probably by a couple points. Yeah. Without all that road rage and stress. So that is a good externality.
So back to your question about the technology and the I guess the biggest problems. And I have a hard time answering that question because, you know, we have been at this. Like specifically focusing on driverless cars and all the technology needed to enable that for a little over four and a half years now and even. A year or two in, I felt like we had. Completed the functionality needed to get someone from point A to point B, as in, if we need to do a left turn maneuver or if we need to drive around it, you know, double parked vehicle into oncoming traffic or navigate through construction zones.
The scaffolding and the building blocks was there pretty early on. And so the challenge is not any one scenario or situation for which we fail at one hundred percent of those. it is more you know, we are benchmarking against a pretty good are pretty high standard, which is human driving. All things considered. Humans are excellent at handling cases in unexpected scenarios where computers of the opposite and so beating that that baseline set by humans is the challenge. And so what we have been doing for quite some time now is basically.
it is this continuous improvement process where we find sort of the the most, you know, uncomfortable or the things that that. Could lead to a safety issue, other things, all these events, and then we sort of categorize them and rework parts of our system to to make incremental improvements and do that over and over and over again. And we just see sort of the overall performance of the system. You know, actually increasing in a pretty steady clip, but there is no one thing, there is actually like thousands of little things and just like polishing functionality and making sure that it handles, you know, every every version and possible permutation of a situation by either applying more deep learning systems.
Or just by, you know, adding more test coverage or new scenarios that that we develop against and just grinding on that it is we are sort of in the unsexy phase of development right now, which is doing the real engineering work that it takes to go from prototype to production.
you are basically scaling the grinding that is sort of taking seriously that the process of all those edge cases, both with human expertise and machine learning methods to to cover to cover all those situations.
Yeah, and the exciting thing for me is I do not think that grinding ever stops because there is a moment in time where you if you cross that threshold of human performance and become superhuman. But there is no reason, there is no first principles, reason that every capability will tap out anywhere near humans, like there is no reason it could not be 20 times better, whether that is, you know, just better driving or safer driving, a more comfortable driving or even a thousand times better given enough time.
And we intend to basically chase that, you know, forever to build the best possible product, better and better and better.
And those new cases come up and new experiences. So and you want to automate that process as much as possible.
Mm hmm. So what do you think a general society, when do you think we may have hundreds of thousands of fully autonomous vehicles driving around? So first of all, predictions, nobody knows the future. you are part of the leading people trying to define their future, but even then, you still do not know.
But if you think about hundreds of thousands of vehicles, so a significant fraction of vehicles in major cities are autonomous, do you think I would Rodney Brooks, who is 20, 50 and beyond, or you more with Elon Musk, who is we should have had that two years ago.
Well, I mean, I do not mean to have it two years ago, but we are not there yet. So I guess the way I would think about that is let us let us flip that question around. So what would prevent. You reach hundreds of thousands of vehicles, and that is a good thing, it is a good rephrasing. Yeah, so the. I would say that it seems the consensus. Among the people developing self-driving cars today is to sort of start with some form of an easier environment, whether it means lacking inclement weather or, you know, mostly sunny or whatever it is.
And then add add capability for more complex situations over time, and so if you are only able to deploy. In areas that meet sort of your criteria or the current domain, you know, operating domain of the software you developed, that may put a cap on how many cities you could deploy in. But then as those restrictions start to fall away, like maybe you add capability to drive really well and and safely and heavy rain or snow, you know, that that probably opens up the market by two, two or three fold in terms of the cities you can expand into and so on.
And so the real question is, you know, I know today if we wanted to, we could produce that that many autonomous vehicles, but we would not be able to make use of all of them yet because we would sort of saturate the demand in the cities in which we would want to operate initially. So if I were to guess, like what the timeline is for those things falling away and reaching hundreds, thousands of vehicles. Maybe a range is, but I would say less than five years, that is in five years.
Yeah. And of course, you are working hard to make that happen. So you started two companies that were eventually acquired for each for a billion dollars.
So you are a pretty good person to ask what does it take to build a successful startup?
Hmm. I think there is there is sort of survivor bias here a little bit. But I can try to find some common threads for the things that worked for me, which is.
You know, in both of these companies, I was really passionate about the core technology, I actually like, you know, lay awake at night thinking about these problems and how to solve them. And I think that is helpful because when you start a business, there are. But like to this day, there are these crazy ups and downs like one, do you think the business is just on just on top of the world and unstoppable in the next day?
You think, OK, this is all going to end? You know, it is just it is just gone south and it is going to be over tomorrow and. And so I think it is like having a true passion that you can fall back on and knowing that you would be doing it even if you were not getting paid for, it helps you whether those tough times. So that is one thing. I think the other one is. Really good people, so I have always been surrounded by really good co-founders that are logical thinkers are always pushing their limits and have very high levels of integrity.
So that is Dan and my current company and actually his brother and a couple other guys for Justin TV and Twitch. And then I think the last thing is. Just I guess, persistence or perseverance like and that that can apply to sticking to sort of or having conviction around the original premise of your idea and sticking around to do all the, you know, unsexy work to actually make it come to fruition, including dealing with, you know. Whatever it is that that you are not passionate about, whether that is finance or or or or operations or those things, as long as you are grinding away and working towards, you know, that North Star for your business, whatever it is, and you do not give up and you are making progress every day, it seems like eventually will end up in a good place.
And the only things that can slow you down are, you know, running out of money or I suppose your competitor is destroying you. But I think most of the time it is as people giving up or somehow destroying things themselves rather than being beaten by their competition or running out of money.
Yeah, if you never quit, eventually you will arrive. So much more concise version of what I was trying to say, that you want the Y Combinator out twice. Yeah, what do you think?
And a quick question, do you think is the best way to raise funds in the early days or not just funds, but just community develop idea and so on? Can you do it a solo or maybe with a co-founder like self-funded? Do you think Y Combinator is good, is a good to do VC or is there no right answer was formed with the Y Combinator experience something that you could take away that that was the right path to take?
there is no one size fits all answer, but if your ambition, I think is to. You know, see how big you can make something or or rapidly expand and capture a market or solve a problem or whatever it is, then then, you know, going to venture back out is probably a good approach so that so that capital does not become your primary constraint. Y Combinator, I love because it puts you in this sort of competitive environment where you are where you are surrounded by, you know, the top maybe one percent of other really highly motivated, you know, peers who are in the same same place.
And that that environment, I think, just breeds. Breed success, right, if you are surrounded by really brilliant, hardworking people, you are going to feel sort of compelled or inspired to try to emulate them or beat them. And so even though I had done it once before and I felt like. Yeah, pretty self-motivated, I thought, like, look, this is going to be a hard problem, I can use all the help I can get, so surrounding myself with other entrepreneurs is going to make me work a little bit harder or push a little harder than is worth it.
And that is why it why I did it. You know, for example, the second time, let us let us go philosophical.
Existential if you go back and do something differently in your life. Starting in high school and at MIT leaving MIT, you could have gone the past year out doing the startup. Going to see about a start up in California and or maybe some aspects of fundraising, is there something you regret, something you not necessarily regret? But if you go back to differently, I think I have made a lot of mistakes, like, you know, pretty much everything you can screw up.
I think I have screwed up at least once. But I you know, I do not regret those things. I think it is hard to hard to look back on things even if they did not go well and call it a regret, because hopefully, you know, took away some new knowledge or learning from that. So. I would say there was a period yeah, the closest I can I can come to is this there is a period in Justin.tv, I think after seven years where.
You know, the company was going one direction, which is towards Twitch in video game, and I am not a video gamer. I do not really even use Twitch at all. And I was still working on the core technology there, but my my heart was no longer in it because the business that we were creating was not something that I was personally passionate about.
It did not meet your bar of existential impact. Yeah. And I would say I probably spent an extra year or two working on that. And and I would say, like, I would have just tried to do something different sooner. Because those were two years where I felt like. You know, from this philosophical or existential thing, I just I just felt that something was missing and so I would have I would have if I could look back now and tell myself, it is like I would have said exactly that, like you are not getting any meaning out of your work personally right now.
You should you should find a way to change that. And that is that is part of the pitch I used to. Basically, everyone who joins us today, it is like, hey, you have got that now by coming here.
Well, maybe you needed the two years of that existential dread to develop the feeling that ultimately it was the fire, the creator crews.
So, you know, no, you can not. Good theory here. So last question. What does 2013 hold for crews after this?
I guess we are going to go and talk to your class. But one of the big things is going from prototype to production for autonomous cars. And what does that mean? What does that look like in. Twenty nineteen for us, this is the year that we try to cross over that threshold and reach, you know, superhuman level of performance to some degree with the software and have all the other of the thousands of little building blocks in place to to launch, you know, our first commercial product.
So that is that is what is in store for us, are in store for us. And we have got a lot of work to do. we have got a lot of brilliant people working on it. So it is it is all up to us now. Yeah.
From Charlie Miller and Chris Valasek, people have crossed paths with you.
It sounds like you have an amazing team. So like I said, it is one of the most, I think, one of the most important problems in artificial intelligence of the century. it will be one of the most defining, the super exciting that you work on it. And the best of luck in 2013. I am really excited to see what Cruise comes up with. Thank you. Thanks for having me today. Thanks.
